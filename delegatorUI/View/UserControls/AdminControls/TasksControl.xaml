<UserControl x:Class="delegatorUI.View.UserControls.AdminControls.TasksControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:delegatorUI.View.UserControls.AdminControls"
             xmlns:models="clr-namespace:delegatorUI.Library.Models;assembly=delegatorUI.Library"
             xmlns:res="clr-namespace:delegatorUI.ViewResources"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="0" To="1" Duration="0:0:1"/>
                        <DoubleAnimation
                            Storyboard.TargetName="tv"
                            Storyboard.TargetProperty="Opacity"
                            BeginTime="0:0:1"
                            From="0" To="1" Duration="0:0:1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Grid.Triggers>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Background="Transparent">

                <TextBlock Style="{StaticResource TextBlockStyle}" FontSize="24"
                           HorizontalAlignment="Left" Margin="30,0,0,20"
                           Foreground="{DynamicResource Text}">
                    <Run 
                    Text="Задачи "/><Run 
                    Text="{Binding CompanyName, Mode=OneWay}"/><Run 
                    Text=":"/>
                </TextBlock>

                <Border Background="Transparent" BorderThickness="0"
                    Height="25" Width="25" Margin="0,27.5,65,0"
                    HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Path Data="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                         Fill="{DynamicResource Path}" Stretch="Uniform"/>
                    <Border.InputBindings>
                        <MouseBinding Gesture="LeftClick" 
                            Command="{Binding ToAddTaskCommand}"/>
                    </Border.InputBindings>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <Border Background="Transparent" BorderThickness="0"
                    Height="25" Width="25" Margin="0,27.5,25,0"
                    HorizontalAlignment="Right" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-1"/>
                        </TransformGroup>
                    </Border.RenderTransform>
                    <Path Data="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"
                         Fill="{DynamicResource Path}" Stretch="Uniform"/>
                    <Border.InputBindings>
                        <MouseBinding Gesture="LeftClick" 
                            Command="{Binding ReloadTasksCommand}"/>
                    </Border.InputBindings>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <TextBox x:Name="SearchTb" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxBaseWithTheme}"
                    Margin="20,0,20,10" Height="30"
                    VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                <TextBlock Text="Введите название задачи"
                    Margin="22,0,0,10" Panel.ZIndex="-100">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" x:Name="SearchDescription"
                            BasedOn="{StaticResource TextBlockStyleBaseWithTheme}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SearchTb, Path=Text}" Value="">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" Duration="0:0:.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0" Duration="0:0:.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

            </Grid>

            <TreeView x:Name="tv" ItemsSource="{Binding Tasks}" Opacity="0"
                      Background="Transparent" Grid.Row="1" BorderBrush="Transparent" Padding="0,0,5,0">
                <TreeView.Resources>
                    <Style x:Key="{x:Type TreeViewItem}"
                        TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="1,0,0,0"/>
                        <Setter Property="Foreground" Value="{DynamicResource Text}"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Margin" Value="20,0,0,0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid Margin="0,5,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" x:Name="HeaderRow"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Border
                                            Grid.ColumnSpan="100" Grid.Row="0" 
                                            Background="{DynamicResource TaskBg}" 
                                            CornerRadius="5" Margin="0,0,10,0"
                                            BorderBrush="White" BorderThickness="4,0,0,0">
                                            <Border.Effect>
                                                <DropShadowEffect
                                                    ShadowDepth="1" Direction="275"
                                                    Opacity=".6" BlurRadius="20"/>
                                            </Border.Effect>
                                        </Border>
                                        <ToggleButton x:Name="Expander" VerticalAlignment="Top" Margin="4,10,0,0"
                                            Style="{StaticResource ExpandCollapseToggleStyle}"
                                            IsChecked="{Binding Path=IsExpanded,
                                                RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press"/>
                                        <Border Name="Bd"
                                            HorizontalAlignment="Stretch"
                                            Grid.Column="1" Height="40"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}">
                                            <ContentPresenter x:Name="PART_Header" Margin="0,4,40,0"
                                                ContentSource="Header" VerticalAlignment="Top"
                                                HorizontalAlignment="Stretch"/>
                                        </Border>
                                        <StackPanel x:Name="EditPanel" Width="0"
                                            Orientation="Horizontal" Grid.Column="2"
                                            HorizontalAlignment="Right" VerticalAlignment="Top"
                                            Margin="0,4,20,0" Height="30"
                                            Background="Transparent">
                                            <Border Background="Transparent" BorderThickness="0"
                                                Height="20" Width="20" Padding="1" Margin="10,0,0,0">
                                                <Path Data="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                  Fill="{DynamicResource Path}" Stretch="Uniform"/>
                                                <Border.InputBindings>
                                                    <MouseBinding Gesture="LeftClick" Command="{Binding ElementName=tv,
                                                    Path=DataContext.ToAddTaskCommand}"
                                                    CommandParameter="{Binding}"/>
                                                </Border.InputBindings>
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                            <Border Background="Transparent" BorderThickness="0"
                                                    VerticalAlignment="Top"
                                                Height="20" Width="20" Padding="1" Margin="10,4,10,0">
                                                <Path Data="M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z"
                                                  Fill="{DynamicResource Path}" Stretch="Uniform"/>
                                                <Border.InputBindings>
                                                    <MouseBinding Gesture="LeftClick" Command="{Binding ElementName=tv,
                                                    Path=DataContext.ToUpdateTaskCommand}"
                                                    CommandParameter="{Binding}"/>
                                                </Border.InputBindings>
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                            <Border Background="Transparent" BorderThickness="0"
                                            Height="20" Width="20" Padding="1" Margin="0,1,0,0">
                                                <Path Data="M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z"
                                                Fill="{DynamicResource Path}" Stretch="Uniform"/>
                                                <Border.InputBindings>
                                                    <MouseBinding Gesture="LeftClick" Command="{Binding ElementName=tv,
                                                    Path=DataContext.ToDelTaskCommand}"
                                                    CommandParameter="{Binding}"/>
                                                </Border.InputBindings>
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                        </StackPanel>
                                        <ToggleButton x:Name="DescBtn" Grid.Column="2"
                                            Content="● ● ●" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,6,20,0">
                                            <ToggleButton.Triggers>
                                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="Height"
                                                                    From="40" To="230" Duration="0:0:.2"/>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="EditPanel"
                                                                    Storyboard.TargetProperty="Width"
                                                                    From="0" To="90" Duration="0:0:.2"/>
                                                                <ThicknessAnimation
                                                                    Storyboard.TargetName="DescBtn"
                                                                    Storyboard.TargetProperty="Margin"
                                                                    From="0,6,20,0" To="0,6,110,0" Duration="0:0:.2"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="Height"
                                                                    From="230" To="40" Duration="0:0:.2"/>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="EditPanel"
                                                                    Storyboard.TargetProperty="Width"
                                                                    From="90" To="0" Duration="0:0:.2"/>
                                                                <ThicknessAnimation
                                                                    Storyboard.TargetName="DescBtn"
                                                                    Storyboard.TargetProperty="Margin"
                                                                    From="0,6,110,0" To="0,6,20,0" Duration="0:0:.2"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                            </ToggleButton.Triggers>
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton" BasedOn="{StaticResource DescBtnStyle}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Cursor" Value="Hand"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <ItemsPresenter x:Name="ItemsHost"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2">
                                            <ItemsPresenter.Style>
                                                <Style TargetType="ItemsPresenter">
                                                    <Style.Triggers>
                                                        <Trigger Property="Opacity" Value="0">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="Opacity" Value="1">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ItemsPresenter.Style>
                                        </ItemsPresenter>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="1" To="0" Duration="0:0:.2"
                                                            Storyboard.TargetProperty="Opacity"
                                                            Storyboard.TargetName="ItemsHost"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="0" To="1" Duration="0:0:.2"
                                                            Storyboard.TargetProperty="Opacity"
                                                            Storyboard.TargetName="ItemsHost"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Width" Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Height"  Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.Resources>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type models:AppTask}" ItemsSource="{Binding Tasks}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <TextBlock Text="{Binding Title}" Style="{StaticResource SmallTextBlockStyleWithTheme}" Margin="0,1,0,0"/>

                            <TextBlock Text="{Binding Category.Title}" Foreground="{Binding Category.Color}"
                                HorizontalAlignment="Right" Background="{DynamicResource TaskBg}" Style="{DynamicResource SmallTextBlockStyle}"
                                FontSize="18" Margin="0,3,0,0"/>
                                
                            <Rectangle Height="2" VerticalAlignment="Top" HorizontalAlignment="Left" Width="150" Fill="White" Grid.Row="1"/>

                            <Grid Grid.Row="1" Margin="0,10,0,0">
                                <Grid.Resources>
                                    <Style TargetType="ListView">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Style>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Foreground" Value="White"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Описание задачи:" Style="{DynamicResource SmallTextBlockStyleWithTheme}"/>
                                <ScrollViewer Grid.Row="1" Height="75" VerticalScrollBarVisibility="Auto" MaxWidth="400"
                                    HorizontalAlignment="Left">
                                    <TextBlock Text="{Binding Description}"
                                        TextWrapping="WrapWithOverflow" Style="{DynamicResource SmallTextBlockStyleWithTheme}"/>
                                </ScrollViewer>

                                <TextBlock Text="Дэдлайн:" Grid.Row="2" Margin="0,10,0,0" Style="{DynamicResource SmallTextBlockStyleWithTheme}"/>
                                <TextBlock Text="{Binding EndTime, StringFormat=d}" Grid.Row="3" 
                                        TextWrapping="WrapWithOverflow" Style="{DynamicResource SmallTextBlockStyleWithTheme}"/>

                                <TextBlock Text="Сотрудники:" Grid.Column="1" Margin="50,0,0,0" Style="{DynamicResource SmallTextBlockStyleWithTheme}"/>
                                <ListView ItemsSource="{Binding Users}" 
                                    Width="200" ItemContainerStyle="{StaticResource ListViewNoHover}"
                                    HorizontalAlignment="Left" Margin="50,0,0,0"
                                    Grid.Column="1" Grid.Row="1" Grid.RowSpan="3">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <TextBlock x:Name="UserTb" Text="{Binding User.UserName}" Style="{StaticResource SmallTextBlockStyleWithTheme}"/>
                                                <Popup x:Name="ToDoPopup" Placement="Mouse" IsOpen="{Binding ElementName=UserTb, Path=IsMouseOver, Mode=OneWay}"
                                                    PopupAnimation="Fade" AllowsTransparency="True" MaxWidth="300">
                                                    <Border Background="{DynamicResource WindowPanel}" CornerRadius="5" BorderThickness="1" BorderBrush="{DynamicResource Path}">
                                                        <TextBlock Style="{StaticResource SmallTextBlockStyleWithTheme}" Margin="3" TextWrapping="WrapWithOverflow">
                                                            <Run Text="Обязанности "/><Run Text="{Binding User.UserName}"/><Run Text=": "/>
                                                            <LineBreak/><Run Text="{Binding ToDo}"/>
                                                        </TextBlock>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>

                                <TextBlock Grid.Column="2" Style="{DynamicResource SmallTextBlockStyleWithTheme}">
                                    <Run Text="Назначил:"/>
                                    <Run Text="{Binding Sender.UserName}"/>
                                </TextBlock>
                                
                                <TextBlock Grid.Column="2" Style="{DynamicResource SmallTextBlockStyleWithTheme}"
                                    Grid.Row="1">
                                    <Run Text="Ответственный:"/>
                                    <Run Text="{Binding Responsible.UserName}"/>
                                </TextBlock>
                            </Grid>
                        </Grid>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <TextBlock Text="Задач нет" Opacity="0" Margin="40,20,0,0"
                Grid.Row="1" VerticalAlignment="Top" Panel.ZIndex="-100">
                <TextBlock.Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyleBaseWithTheme}">
                        <Setter Property="FontSize" Value="22"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Tasks.Count}" Value="0">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="1" Duration="0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="0" Duration="0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Border Opacity="{Binding AddTaskOpacity, UpdateSourceTrigger=PropertyChanged}" Panel.ZIndex="{Binding AddTaskZIndex}"
                    CornerRadius="10" Width="750" Height="440" Grid.RowSpan="100"
                    Background="{DynamicResource WindowPanel}" d:Opacity="1">
                <Border.Effect>
                    <DropShadowEffect
                        ShadowDepth="1" Direction="275"
                        Opacity=".6" BlurRadius="20"/>
                </Border.Effect>

                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="Panel.ZIndex" Value="1">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="1" Duration="0:0:.2"
                                                Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="1" To="0" Duration="0:0:.2"
                                                Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Grid>
                    <Grid.Resources>
                        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Foreground" Value="{DynamicResource Text2}"/>
                            <Setter Property="VerticalAlignment" Value="Bottom"/>
                        </Style>
                        <Style TargetType="TextBlock" x:Key="TitleDescription"
                           BasedOn="{StaticResource TextBlockStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=TitleTb}" Value="">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation
                                                    Storyboard.TargetProperty="Margin"
                                                    To="12,0,0,0" Duration="0:0:.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation
                                                    Storyboard.TargetProperty="Margin"
                                                    To="12,0,0,-21" Duration="0:0:.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <TextBox x:Name="TitleTb" Text="{Binding NewTaskTitle, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource TextBoxBaseWithTheme}" Height="30"
                             HorizontalAlignment="Stretch" Margin="10,10,20,0" FontSize="20" Grid.ColumnSpan="2"/>
                    <TextBlock Text="Название" Panel.ZIndex="-1" Style="{StaticResource TitleDescription}"/>

                    <DatePicker Grid.Column="2" Style="{StaticResource DatePickerBase}" 
                                VerticalAlignment="Bottom" Margin="10,0,0,-5" SelectedDate="{Binding NewTaskEndDate, UpdateSourceTrigger=PropertyChanged}"/>

                    <TextBox Grid.Row="1" Text="{Binding NewTaskDesc, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource MultiLineTextBox}"
                             Margin="10,40,10,10" VerticalScrollBarVisibility="Auto"/>
                    <TextBlock Text="Описание:" Grid.Row="1" Panel.ZIndex="-1" 
                            Style="{StaticResource SmallTextBlockStyleWithTheme}"
                            Width="200" Margin="12,14,0,10"
                            HorizontalAlignment="Left" VerticalAlignment="Top"/>

                    <TextBlock Text="Ответственный:" Grid.Row="1" Grid.Column="1" Panel.ZIndex="-1" 
                            Style="{StaticResource SmallTextBlockStyleWithTheme}"
                            Width="200" Margin="12,14,0,10"
                            HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBlock Text="{Binding Resp.UserName}" Grid.Row="1" Grid.Column="1" Panel.ZIndex="-1" 
                            Style="{StaticResource SmallTextBlockStyleWithTheme}"
                            Width="200" Margin="12,38,0,10"
                            HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Border Background="Transparent" BorderThickness="0"
                        VerticalAlignment="Top" Grid.Column="1" Grid.Row="1"
                        HorizontalAlignment="Right"
                        Height="20" Width="20" Padding="1" Margin="0,21,10,0">
                        <Path Data="M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z"
                            Fill="{DynamicResource Path}" Stretch="Uniform"/>
                        <Border.InputBindings>
                            <MouseBinding Gesture="LeftClick" Command="{Binding ElementName=tv,
                                Path=DataContext.ToChangeRespCommand}"
                                CommandParameter="{Binding}"/>
                        </Border.InputBindings>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                    
                    <Grid Grid.Column="1" Grid.Row="1" Background="{DynamicResource WindowPanel}"
                        Opacity="0" Panel.ZIndex="{Binding ChangeRespZIndex}">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <Trigger Property="Panel.ZIndex" Value="1">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="0" To="1" Duration="0:0:.2"
                                                        Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="1" To="0" Duration="0:0:.2"
                                                        Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>

                        </Grid.Style>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBox x:Name="SearchRespTb" Style="{StaticResource TextBoxBaseWithTheme}" Margin="10,2" 
                                 Text="{Binding SearchRespText, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="Поиск" Margin="12,0,0,0" Panel.ZIndex="-1">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=SearchRespTb, Path=Text}" Value="">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="0" To="1" Duration="0:0:.2"
                                                            Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="1" To="00" Duration="0:0:.2"
                                                            Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Border Grid.Column="1" 
                            Background="{DynamicResource WindowPanel}" BorderBrush="Transparent"
                            Width="25" Height="15" Margin="0,25,10,0"
                            HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Path Data="M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z" 
                            Stretch="Uniform" Fill="{DynamicResource Path}" Width="15" Height="15"/>
                            <Border.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding BackFromChangeRespCommand}"/>
                            </Border.InputBindings>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <ListView x:Name="RespLw" Grid.Row="1" 
                            Style="{StaticResource ListViewBase}" ItemContainerStyle="{StaticResource ListViewNoHover}"
                            Margin="10,5,10,10" ItemsSource="{Binding RespUsers}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding UserName}" Style="{StaticResource SmallTextBlockStyleWithTheme}"
                                        FontSize="18">
                                        <TextBlock.InputBindings>
                                            <MouseBinding Gesture="LeftClick" Command="{Binding ElementName=RespLw,
                                                Path=DataContext.BackFromChangeRespCommand}"
                                                CommandParameter="{Binding}"/>
                                        </TextBlock.InputBindings>
                                    </TextBlock>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>


                    <TextBlock Text="Список сотрудников:" Style="{StaticResource SmallTextBlockStyleWithTheme}"
                               Grid.Column="2" Grid.Row="1" Margin="10,14,0,0" VerticalAlignment="Top"/>
                    <ListView x:Name="TaskUsersLw" Grid.Column="2" Grid.Row="1" ItemsSource="{Binding NewTaskUsers}"
                              Margin="10,40,10,10" Style="{StaticResource ListViewBase}" ItemContainerStyle="{StaticResource ListViewNoHover}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding User.UserName}" Style="{StaticResource SmallTextBlockStyleWithTheme}"
                                    FontSize="18">
                                    <TextBlock.InputBindings>
                                        <MouseBinding Gesture="LeftClick"
                                            Command="{Binding ElementName=TaskUsersLw, Path=DataContext.DeleteUserCommand}"
                                            CommandParameter="{Binding}"/>
                                    </TextBlock.InputBindings>
                                </TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Border Grid.Column="2" Grid.Row="1" 
                            Background="Transparent" BorderBrush="Transparent"
                            Width="25" Height="25" Margin="0,19,10,0"
                            HorizontalAlignment="Right" VerticalAlignment="Top">
                        <Path Data="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" 
                            Stretch="Uniform" Fill="{DynamicResource Path}" Width="15" Height="15"/>
                        <Border.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding ToAddTaskUserCommand}"/>
                        </Border.InputBindings>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <Grid Grid.Column="2" Grid.Row="1" Background="{DynamicResource WindowPanel}"
                        Opacity="{Binding AddTaskUserOpacity}" Panel.ZIndex="{Binding AddTaskUserZIndex}">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <Trigger Property="Panel.ZIndex" Value="1">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="0" To="1" Duration="0:0:.2"
                                                Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="1" To="0" Duration="0:0:.2"
                                                Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>

                        </Grid.Style>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBox x:Name="SearchTaskTb" Style="{StaticResource TextBoxBaseWithTheme}" Margin="10,2" 
                                 Text="{Binding SearchTaskText, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="Поиск" Margin="12,0,0,0" Panel.ZIndex="-1">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=SearchTaskTb, Path=Text}" Value="">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="0" To="1" Duration="0:0:.2"
                                                            Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="1" To="00" Duration="0:0:.2"
                                                            Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Border Grid.Column="1" 
                            Background="{DynamicResource WindowPanel}" BorderBrush="Transparent"
                            Width="25" Height="15" Margin="0,25,10,0"
                            HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Path Data="M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z" 
                            Stretch="Uniform" Fill="{DynamicResource Path}" Width="15" Height="15"/>
                            <Border.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding BackFromAddTaskUserCommand}"/>
                            </Border.InputBindings>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <ListView x:Name="AddUsersLw" Grid.Row="1" 
                            Style="{StaticResource ListViewBase}" ItemContainerStyle="{StaticResource ListViewNoHover}"
                            Margin="10,5,10,10" ItemsSource="{Binding CompanyUsers}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding UserName}" Style="{StaticResource SmallTextBlockStyleWithTheme}"
                                        FontSize="18">
                                        <TextBlock.InputBindings>
                                            <MouseBinding Gesture="LeftClick" Command="{Binding ElementName=AddUsersLw,
                                                Path=DataContext.ToToDoTaskUserCommand}"
                                                CommandParameter="{Binding}"/>
                                        </TextBlock.InputBindings>
                                    </TextBlock>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>

                    <TextBlock Style="{StaticResource SmallTextBlockStyleWithTheme}"
                        Grid.Row="2" Grid.ColumnSpan="100"
                        VerticalAlignment="Center" TextAlignment="Center">
                        <Run Text="Категория:"/>
                        <Run Text="{Binding NewTaskCategory.Title}"/>
                    </TextBlock>

                    <Border Grid.Row="2" Grid.Column="2"
                        BorderBrush="Transparent" Background="Transparent"
                        Width="30" Height="30" Margin="50,0,10,5"
                        HorizontalAlignment="Left" VerticalAlignment="Bottom">
                        <Path Data="M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z" 
                            Stretch="Uniform" Fill="{DynamicResource Path}" Width="20" Height="20"/>
                        <Border.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding ChangeCategoryCommand}"/>
                        </Border.InputBindings>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <Button Grid.Row="100" Style="{StaticResource ButtonBaseWithTheme}" 
                            Width="100" Height="30" Content="Назад"
                            HorizontalAlignment="Left" Margin="10"
                            Command="{Binding BackFromAddTaskCommand}" IsCancel="True"/>

                    <Button Grid.Row="100" Grid.Column="2" Style="{StaticResource ButtonBaseWithTheme}" 
                            Width="100" Height="30" Content="Сохранить"
                            HorizontalAlignment="Right" Margin="10"
                            Command="{Binding AddTaskCommand}"
                            IsDefault="True"/>

                </Grid>

            </Border>

            <Border Opacity="{Binding DelTaskOpacity}" Panel.ZIndex="{Binding DelTaskZIndex}" d:Opacity="0"
                Grid.RowSpan="100" Height="200" Width="300" CornerRadius="10" Background="{DynamicResource WindowPanel}">

                <Border.Effect>
                    <DropShadowEffect
                        ShadowDepth="1" Direction="275"
                        Opacity=".6" BlurRadius="20"/>
                </Border.Effect>

                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="Panel.ZIndex" Value="1">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="1" Duration="0:0:.2"
                                                Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="1" To="0" Duration="0:0:.2"
                                                Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Grid Margin="10">

                    <TextBlock Margin="20,-20,20,0" Height="120" Style="{StaticResource SmallTextBlockStyleWithTheme}"
                        TextWrapping="WrapWithOverflow" TextAlignment="Center" FontSize="22">
                        <Run 
                            Text="Вы уверен что хотите удалить "/><Run
                            Text="{Binding TaskToDel.Title}"/><Run
                            Text="?"/>
                    </TextBlock>

                    <Button Grid.Row="100" Style="{StaticResource ButtonBaseWithTheme}" 
                        Width="100" Height="30" Content="Назад"
                        HorizontalAlignment="Left" VerticalAlignment="Bottom"
                        Command="{Binding BackFromDelTaskCommand}" IsCancel="True"/>

                    <Button Grid.Row="100" Grid.Column="1" Style="{StaticResource ButtonBaseWithTheme}" 
                        Width="100" Height="30" Content="Удалить"
                        HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Command="{Binding DelTaskCommand}"
                        IsDefault="True"/>

                </Grid>
                
            </Border>

            <Border Background="{DynamicResource WindowPanel}" CornerRadius="10"
            Opacity="0" d:Opacity="1" Panel.ZIndex="{Binding ToDoZIndex}"
            Width="300" Height="350" d:Panel.ZIndex="1"
            Grid.ColumnSpan="100" Grid.RowSpan="100">
                <Border.Effect>
                    <DropShadowEffect
                    ShadowDepth="1" Direction="275"
                    Opacity=".6" BlurRadius="20"/>
                </Border.Effect>

                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="Panel.ZIndex" Value="1">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="1" Duration="0:0:.2"
                                            Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="1" To="0" Duration="0:0:.2"
                                            Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Grid >

                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                        <RowDefinition Height="40"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Что будет делать человек?" Margin="10,10,0,0"
                    Style="{StaticResource SmallTextBlockStyle}" FontSize="20"/>

                    <TextBox Style="{StaticResource MultiLineTextBox}" Grid.Row="1" 
                    Margin="10" Text="{Binding ToDoText, UpdateSourceTrigger=PropertyChanged}"/>

                    <Button Content="Добавить" Margin="0,0,10,10"
                    Width="100" Height="30"
                    HorizontalAlignment="Right"
                    Command="{Binding AddToDoCommand}"
                    Style="{StaticResource ButtonBaseWithTheme}"
                    Grid.Row="2"/>

                    <Button Content="Назад" Margin="10,0,0,10"
                    Width="100" Height="30"
                    HorizontalAlignment="Left"
                    Command="{Binding BackFromToDoTaskUserCommand}"
                    Style="{StaticResource ButtonBaseWithTheme}"
                    Grid.Row="2"/>

                </Grid>

            </Border>

        </Grid>

        <res:LoadingAnimation Panel.ZIndex="{Binding LoadingZIndex}" Opacity="0" d:Panel.ZIndex="-100"/>
    </Grid>
</UserControl>
